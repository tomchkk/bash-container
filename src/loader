#!/usr/bin/env bash

__loader_bash_clash=${1:?"bash-clash is required"}

##
# Either sources a resolved file source path, or loads a container resource by
# resolving a given name or alias.
##
loader::source() {
    local resource="${1:?"A resource name, alias or a file path is required"}"
    local args=${@:2}

    if [[ -f "$resource" ]]; then
        # we've got a plain ole file to be sourced, maybe with some args...
        builtin source "$resource" "${args[@]}"

        return $?
    fi

    # must split the declaration and assignment to capture the return code
    local resolved; resolved=$(container::resolve "$resource" 2>&1)
    if [[ $? -gt 0 ]]; then
        echo "The '$resource' service could not be loaded"

        return 1
    fi

    # pass all resolved and trailing arguments into bash-clash, declaring any
    # named arguments
    builtin source $__loader_bash_clash --declare "${resolved[@]}" "${args[@]}"

    # finally we have all service positional arguments properly parsed
    builtin source "${bash_clash_positionals[@]}"
}
